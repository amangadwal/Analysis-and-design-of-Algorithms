#include <iostream>
#include <chrono>
#include <vector>

using namespace std;
using namespace chrono;

// Function to generate a list of random numbers
vector<int> genList(int k) {
    vector<int> arr(k);
    for (int i = 0; i < k; ++i) {
        arr[i] = rand();
    }
    return arr;
}

// Function to generate permutations
void perm(vector<int>& arr, int k, int size) {
    if (k == size - 1) {
        // Process the generated permutation (printing or any other operation)
        // For now, just comment out the print statement
        // for (int i = 0; i < size; ++i) {
        //     cout << arr[i] << " ";
        // }
        // cout << endl;
    } else {
        for (int i = k; i < size; ++i) {
            swap(arr[i], arr[k]);
            perm(arr, k + 1, size);
            swap(arr[i], arr[k]);
        }
    }
}

// Function to measure the execution time and print the results
void timeComp() {
    for (int i = 1; i <= 100000; i += 1000) {
        vector<int> arr = genList(i);

        auto start = high_resolution_clock::now();

        for (int j = 1; j <= 10; ++j) {
            perm(arr, 0, i);
        }

        auto stop = high_resolution_clock::now();
        auto duration = duration_cast<microseconds>(stop - start) / 10;

        float dur = duration.count();
        cout << i << " " << dur << endl;
    }
}

int main() {
    timeComp();
    return 0;
}
